name: Beta
on: 
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version (integer numbers only, e.g. 5 or 24)'     
        required: true

jobs:
  # testflight:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Java
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "17"
  #         distribution: 'zulu'
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #         architecture: x64
  #     - name: Setup SSH key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.SSH_KEY }}
  #         known_hosts: ${{ secrets.KNOWN_HOSTS }}
  #         if_key_exists: replace
  #     - name: Setup ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.7.2
  #         bundler-cache: true
  #         working-directory: ios
  #     - name: Set Release Version
  #       working-directory: ios
  #       run: bundle exec fastlane set_release_version
  #       env:
  #         RELEASE_VERSION: "${{ github.event.inputs.releaseVersion }}.0"
  #     - name: Prepare for build
  #       run: |
  #         flutter pub get
  #         flutter pub run build_runner build
  #         flutter build ios --release --no-codesign --dart-define=LTA_DATAMALL_API_KEY=${{secrets.LTA_DATAMALL_API_KEY}} --dart-define=BUILD_NAME=$RELEASE_VERSION
  #       env:
  #         RELEASE_VERSION: "${{ github.event.inputs.releaseVersion }}.0"
  #     - name: TestFlight
  #       working-directory: ios
  #       run: bundle exec fastlane beta
  #       env:
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         ASCAPI_KEY_ID: ${{ secrets.ASCAPI_KEY_ID }}
  #         ASCAPI_ISSUER_ID: ${{ secrets.ASCAPI_ISSUER_ID }}
  #         ASCAPI_KEY_CONTENT: ${{ secrets.ASCAPI_KEY_CONTENT }}
  googlePlay:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: 'zulu'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
          working-directory: android
      - name: Configure Keystore
        run: |
          cd android
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
            base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" > key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
      - name: Create Google Play Config file
        run: |
          cd android
          echo "$PLAY_CONFIG_JSON" > play_config.json.b64
          base64 -d -i play_config.json.b64 > play_config.json
        env:
          PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
      - name: Random build number
        id: randomBuildGenerator
        run: echo "buildNumber=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Build appbundle
        env:
          BUILD_NUMBER: ${{ steps.randomBuildGenerator.outputs.buildNumber }}
          RELEASE_VERSION: "${{ github.event.inputs.releaseVersion }}.0"
        run: |
          flutter pub get
          flutter pub run build_runner build
          flutter build appbundle --release --build-number=$BUILD_NUMBER --build-name=$RELEASE_VERSION --dart-define=LTA_DATAMALL_API_KEY=${{ secrets.LTA_DATAMALL_API_KEY }} --dart-define=BUILD_NAME=$RELEASE_VERSION
      - name: Upload to Play Store Test Lane
        run: |
          export LC_ALL=en_US.UTF-8
          export LANG=en_US.UTF-8
          cd android
          bundle exec fastlane deploy_internal
  createRelease:
    runs-on: ubuntu-latest
    needs: [testflight,googlePlay]
    steps:
    - uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: "v${{ github.event.inputs.releaseVersion }}.0+${{ github.run_number }}"
        tag: "v${{ github.event.inputs.releaseVersion }}.0+${{ github.run_number }}"
       