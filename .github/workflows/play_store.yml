name: PlayStore
on:
  push:
    branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  playstore:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.5'
    - name: Setup ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: true
    - name: Configure Keystore
      run: |
        cd android
        echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
        echo "storeFile=keystore.jks" > key.properties
        echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
        echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
        echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
      env:
        ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
        KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
    - name: Create Google Play Config file
      run : |
        cd android
        echo "$PLAY_CONFIG_JSON" > play_config.json.b64
        base64 -d -i play_config.json.b64 > play_config.json
      env:
        PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
    - name: Add Google Services file
      run: echo "${{ secrets.ANDROID_GOOGLE_SERVICES }}" > android/app/google-services.json
    - name: Build appbundle
      run: |
        flutter pub get
        flutter build appbundle --dart-define=LTA_DATAMALL_API_KEY=${{ secrets.LTA_DATAMALL_API_KEY }}